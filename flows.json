[
    {
        "id": "e0a0bdcfb5ac47e3",
        "type": "function",
        "z": "2d8e328b513e7f8d",
        "name": "upload",
        "func": "var min\nif (msg.topic == 'date') {\n    context.set('min', msg.payload)\n}\nif (context.get('min') == undefined) {\n    var date = new Date()\n    date.setHours(0); date.setMinutes(0); date.setSeconds(0); date.setMilliseconds(0);\n    context.set('min', date.getTime())\n}\nmin = context.get('min')\nvar data = []\nfor (const entry of msg.payload) {\n    data.push({\n        x: parseInt(entry.epoch),\n        y: entry.upload,\n    })\n}\nmsg.ui_control = {\n    options: {\n        scales: {\n            xAxes: [{\n                type: 'time',\n                time: {\n                    min: min - 28800000\n                }\n            }] ,\n                yAxes: [{\n                    ticks: {\n                        suggestedMin: 0,\n                        suggestedMax: 500\n                    }\n                }]\n        }\n    },\n}\nif (data.length == 0){\n    msg.payload = []\n} else {\n    msg.payload = [{\n        series: [\"A\"],\n        data: [data],\n        labels: [\"\"]\n    }]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 160,
        "wires": [
            [
                "85386b5b529f9c37"
            ]
        ]
    }
]